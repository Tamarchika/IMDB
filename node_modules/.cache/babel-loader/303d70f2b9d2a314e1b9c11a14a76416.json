{"ast":null,"code":"var _jsxFileName = \"/Users/tamara/Desktop/IMDB/src/components/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Loader from \"./Loader\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchDataAsync, selectData, status, clearState } from \"./homeSlice\";\nimport { Form, Col, Button, Row, Container, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport Cards from \"./cards\";\nimport { useMemo } from \"react\";\nimport debounce from \"lodash.debounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const sources = [\"Lord Of The Rings\", \"Inception\", \"The Hobbit\", \"Titanic\", \"The Witcher\", \"The Conjuring\", \"I am Legend\", \"Home Alone2\", \"The Dark Knight\", \"The Shawshank Redemption\", \"Pulp Fiction\", \"Forrest Gump\", \"City of God\", \"Seven\", \"The Green Mile\", \"Leon\", \"Gladiator\"];\n  const movies = useSelector(selectData);\n  const loadingStatus = useSelector(status);\n  const dispatch = useDispatch();\n  const [searchText, setSearchText] = useState(\"Home alone2\");\n\n  const handleClick = event => {\n    setSearchText(event.target.name);\n    dispatch(clearState());\n  };\n\n  const changeHandler = event => {\n    setSearchText(event.target.value);\n  };\n\n  useEffect(() => {\n    dispatch(fetchDataAsync(searchText));\n  }, [searchText, dispatch]);\n  const debouncedChangeHandler = useMemo(() => debounce(changeHandler, 500), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => e.preventDefault(),\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: \"auto\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: \"inlineFormInput\",\n              visuallyHidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"mb-2\",\n              id: \"inlineFormInput\",\n              placeholder: \"Type text to search\",\n              name: \"searchText\",\n              onChange: debouncedChangeHandler,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"mb-2\",\n              onClick: () => dispatch(clearState()),\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sourceContainer\",\n              children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n                id: \"dropdown-basic-button\",\n                title: \"Top Movies\",\n                children: sources.map((value, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  name: value,\n                  onClick: handleClick,\n                  children: value\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: loadingStatus === \"loading\" ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this) : movies.length > 0 ? movies.map((value, index) => /*#__PURE__*/_jsxDEV(Cards, {\n            data: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 44\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"noArticle\",\n            children: \"There are no movies matching your request\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"lXrhxfSfl33TvflZd8XzQ0FFt/E=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/tamara/Desktop/IMDB/src/components/Home.jsx"],"names":["React","useState","useEffect","Loader","useSelector","useDispatch","fetchDataAsync","selectData","status","clearState","Form","Col","Button","Row","Container","Dropdown","DropdownButton","Cards","useMemo","debounce","Home","sources","movies","loadingStatus","dispatch","searchText","setSearchText","handleClick","event","target","name","changeHandler","value","debouncedChangeHandler","e","preventDefault","map","index","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Loader from \"./Loader\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchDataAsync, selectData, status, clearState } from \"./homeSlice\";\nimport {\n  Form,\n  Col,\n  Button,\n  Row,\n  Container,\n  Dropdown,\n  DropdownButton,\n} from \"react-bootstrap\";\nimport Cards from \"./cards\";\nimport { useMemo } from \"react\";\nimport debounce from \"lodash.debounce\";\n\nfunction Home() {\n  const sources = [\n    \"Lord Of The Rings\",\n    \"Inception\",\n    \"The Hobbit\",\n    \"Titanic\",\n    \"The Witcher\",\n    \"The Conjuring\",\n    \"I am Legend\",\n    \"Home Alone2\",\n    \"The Dark Knight\",\n    \"The Shawshank Redemption\",\n    \"Pulp Fiction\",\n    \"Forrest Gump\",\n    \"City of God\",\n    \"Seven\",\n    \"The Green Mile\",\n    \"Leon\",\n    \"Gladiator\",\n  ];\n  const movies = useSelector(selectData);\n  const loadingStatus = useSelector(status);\n  const dispatch = useDispatch();\n  const [searchText, setSearchText] = useState(\"Home alone2\");\n  const handleClick = (event) => {\n    setSearchText(event.target.name);\n    dispatch(clearState());\n  };\n  const changeHandler = (event) => {\n    setSearchText(event.target.value);\n  };\n  useEffect(() => {\n    dispatch(fetchDataAsync(searchText));\n  }, [searchText, dispatch]);\n  const debouncedChangeHandler = useMemo(\n    () => debounce(changeHandler, 500),\n    []\n  );\n\n  return (\n    <div className=\"home-page\">\n      <Container>\n        <Form onSubmit={(e) => e.preventDefault()}>\n          <Row className=\"align-items-center\">\n            <Col xs=\"auto\">\n              <Form.Label htmlFor=\"inlineFormInput\" visuallyHidden></Form.Label>\n              <Form.Control\n                className=\"mb-2\"\n                id=\"inlineFormInput\"\n                placeholder=\"Type text to search\"\n                name=\"searchText\"\n                onChange={debouncedChangeHandler}\n                autoComplete=\"off\"\n              />\n            </Col>\n            <Col xs=\"auto\">\n              <Button\n                type=\"submit\"\n                className=\"mb-2\"\n                onClick={() => dispatch(clearState())}\n              >\n                Search\n              </Button>\n            </Col>\n            <Col xs=\"auto\">\n              <div className=\"sourceContainer\">\n                <DropdownButton id=\"dropdown-basic-button\" title=\"Top Movies\">\n                  {sources.map((value, index) => (\n                    <Dropdown.Item\n                      key={index}\n                      name={value}\n                      onClick={handleClick}\n                    >\n                      {value}\n                    </Dropdown.Item>\n                  ))}\n                </DropdownButton>\n              </div>\n            </Col>\n          </Row>\n        </Form>\n\n        <Row className=\"justify-content-md-center\">\n          <Col md=\"auto\">\n            {loadingStatus === \"loading\" ? (\n              <Loader />\n            ) : movies.length > 0 ? (\n              movies.map((value, index) => <Cards key={index} data={value} />)\n            ) : (\n              <p className=\"noArticle\">\n                There are no movies matching your request\n              </p>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}