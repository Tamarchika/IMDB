{"ast":null,"code":"var _jsxFileName = \"/Users/tamara/Desktop/IMDB/src/components/cards.jsx\";\nimport React from \"react\";\nimport { Card, Row, Col, Accordion } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport Placeholder from \"../style/unnamed.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = _ref => {\n  let {\n    data\n  } = _ref;\n  let cast = data.cast;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-cards\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"movie-title\",\n            children: [\"Movie Title: \", data.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: typeof data.poster === \"string\" ? data.poster : Placeholder,\n            alt: data.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              style: {\n                fontWeight: \"bold\",\n                fontSize: \"1rem\"\n              },\n              children: data.plot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Link, {\n              href: data.trailer.link,\n              children: \"Trailer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"movie-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Year:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this), \" \", data.year, \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 43\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Movie length:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 50\n              }, this), data.length, \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Movie rating:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), \" \", data.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n              defaultActiveKey: \"0\",\n              children: /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                eventKey: \"0\",\n                children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Read more\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"Cast\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 21\n                  }, this), cast.map((el, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Actor: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 25\n                    }, this), \" \", el.actor, \", \", /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Character: \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 42,\n                      columnNumber: 52\n                    }, this), \" \", el.character]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Cards;\nCards.propTypes = {\n  data: PropTypes.object\n};\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/tamara/Desktop/IMDB/src/components/cards.jsx"],"names":["React","Card","Row","Col","Accordion","PropTypes","Placeholder","Cards","data","cast","title","poster","fontWeight","fontSize","plot","trailer","link","year","length","rating","map","el","i","actor","character","propTypes","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Row, Col, Accordion } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport Placeholder from \"../style/unnamed.png\";\n\nconst Cards = ({ data }) => {\n  let cast = data.cast;\n\n  return (\n    <div className=\"news-cards\">\n      <Row>\n        <Col></Col>\n        <Col sm={8}>\n          <Card>\n            <Card.Header className=\"movie-title\">\n              Movie Title: {data.title}\n            </Card.Header>\n            <Card.Img\n              variant=\"top\"\n              src={typeof data.poster === \"string\" ? data.poster : Placeholder}\n              alt={data.title}\n            />\n            <Card.Body>\n              <Card.Title style={{ fontWeight: \"bold\", fontSize: \"1rem\" }}>\n                {data.plot}\n              </Card.Title>\n              <Card.Link href={data.trailer.link}>Trailer</Card.Link>\n              <Card.Text className=\"movie-info\">\n                <b>Year:</b> {data.year}. <br /> <b>Movie length:</b>\n                {data.length}. <br />\n                <b>Movie rating:</b> {data.rating}\n              </Card.Text>\n              <Accordion defaultActiveKey=\"0\">\n                <Accordion.Item eventKey=\"0\">\n                  <Accordion.Header>\n                    <b>Read more</b>\n                  </Accordion.Header>\n                  <Accordion.Body>\n                    <h1>Cast</h1>\n                    {cast.map((el, i) => (\n                      <li key={i}>\n                        <b>Actor: </b> {el.actor}, <b>Character: </b>{\" \"}\n                        {el.character}\n                      </li>\n                    ))}\n                  </Accordion.Body>\n                </Accordion.Item>\n              </Accordion>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col></Col>\n      </Row>\n    </div>\n  );\n};\n\nCards.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default Cards;\n"]},"metadata":{},"sourceType":"module"}