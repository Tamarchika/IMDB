{"ast":null,"code":"var _jsxFileName = \"/Users/tamara/Desktop/NEWS_APP/src/components/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEf;\n\n  const fetchMovie = async () => {\n    const result = await fetchMovies(id);\n    setMovie(result.data.movies[0]);\n  };\n\n  fetchMovie();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Movies, \"JvKeIB3EKpxoaKlUZSuItXkBI/c=\", false, function () {\n  return [useParams];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/tamara/Desktop/NEWS_APP/src/components/Movies.jsx"],"names":["React","useEffect","useState","useParams","Link","Loader","Movies","id","movie","setMovie","useEf","fetchMovie","result","fetchMovies","data","movies"],"mappings":";;;AAAA,SAASA,KAAT,EAAeC,SAAf,EAA0BC,QAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,UAAvB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AAEAQ,EAAAA,KAAK;;AACL,QAAMC,UAAU,GAAG,YAAW;AAC1B,UAAMC,MAAM,GAAG,MAAMC,WAAW,CAACN,EAAD,CAAhC;AACAE,IAAAA,QAAQ,CAACG,MAAM,CAACE,IAAP,CAAYC,MAAZ,CAAmB,CAAnB,CAAD,CAAR;AACH,GAHD;;AAIAJ,EAAAA,UAAU;AAGV,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAfD;;GAAML,M;UACaH,S;;;KADbG,M;AAiBN,eAAeA,MAAf","sourcesContent":["import { React,useEffect, useState }  from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport { Loader } from './Loader';\n\nconst Movies = () => {\n    const { id } = useParams()  \n    const [movie, setMovie] = useState(null)\n\n    useEf\n    const fetchMovie = async() => {\n        const result = await fetchMovies(id);\n        setMovie(result.data.movies[0])\n    }\n    fetchMovie();\n\n\n    return <React.Fragment>\n\n    </React.Fragment>\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}