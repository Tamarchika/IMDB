{"ast":null,"code":"import axios from 'axios';\nexport const fetchMovies = title => {\n  const url = `https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/${title}`;\n  return new Promise((resolve, reject) => {\n    axios.get(url).then(value => resolve(value)).catch(error => reject(error));\n  });\n};","map":{"version":3,"sources":["/Users/tamara/Desktop/NEWS_APP/src/components/movieAPI.js"],"names":["axios","fetchMovies","title","url","Promise","resolve","reject","get","then","value","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAChC,QAAMC,GAAG,GAAI,uEAAsED,KAAM,EAAzF;AACA,SAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCN,IAAAA,KAAK,CAACO,GAAN,CAAUJ,GAAV,EAAeK,IAAf,CAAoBC,KAAK,IAAIJ,OAAO,CAACI,KAAD,CAApC,EACCC,KADD,CACOC,KAAK,IAAIL,MAAM,CAACK,KAAD,CADtB;AAEH,GAHM,CAAP;AAIH,CANM","sourcesContent":["import axios from 'axios';\n\nexport const fetchMovies = title => {\n    const url = `https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/${title}`;\n    return new Promise((resolve, reject) => {\n        axios.get(url).then(value => resolve(value))\n        .catch(error => reject(error))\n    })\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}