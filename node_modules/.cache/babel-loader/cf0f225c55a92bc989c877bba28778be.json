{"ast":null,"code":"var _jsxFileName = \"/Users/tamara/Desktop/NEWS_APP/src/components/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { fetchMovies } from \"./movieAPI\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movies = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      const result = await fetchMovies(id);\n      setMovie(result.data.movies[0]);\n    };\n\n    fetchMovie();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: \"auto\",\n        children: loadingStatus === 'loading' ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 48\n        }, this) : movies.length > 0 ? movies.map((value, index) => /*#__PURE__*/_jsxDEV(Cards, {\n          data: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"noArticle\",\n          children: \"There are no movies matching your request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Movies, \"2DI+WM1NP8orkt5lpnG0LvHIzCE=\", false, function () {\n  return [useParams];\n});\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/tamara/Desktop/NEWS_APP/src/components/Movies.jsx"],"names":["React","useEffect","useState","useParams","Link","Loader","fetchMovies","Row","Col","Movies","id","movie","setMovie","fetchMovie","result","data","movies","loadingStatus","length","map","value","index"],"mappings":";;;AAAA,SAASA,KAAT,EAAeC,SAAf,EAA0BC,QAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAASP,SAAS,EAAxB;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,UAAU,GAAG,YAAW;AAC9B,YAAMC,MAAM,GAAG,MAAMR,WAAW,CAACI,EAAD,CAAhC;AACAE,MAAAA,QAAQ,CAACE,MAAM,CAACC,IAAP,CAAYC,MAAZ,CAAmB,CAAnB,CAAD,CAAR;AACH,KAHG;;AAIJH,IAAAA,UAAU;AACT,GANQ,EAMN,CAACH,EAAD,CANM,CAAT;AAUA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,2BACC,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,kBACCO,aAAa,KAAK,SAAlB,gBAA8B,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAA9B,GAA2CD,MAAM,CAACE,MAAP,GAAgB,CAAhB,GAAoBF,MAAM,CAACG,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,kBAC3E,QAAC,KAAD;AAAmB,UAAA,IAAI,EAAED;AAAzB,WAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA,gBADgE,CAApB,gBACN;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFtC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UAAP;AASH,CAvBD;;GAAMZ,M;UACaN,S;;;KADbM,M;AAyBN,eAAeA,MAAf","sourcesContent":["import { React,useEffect, useState }  from \"react\";\nimport { useParams, Link } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { fetchMovies } from \"./movieAPI\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst Movies = () => {\n    const { id } = useParams()  \n    const [movie, setMovie] = useState(null)\n\n    useEffect(() => {\n        const fetchMovie = async() => {\n        const result = await fetchMovies(id);\n        setMovie(result.data.movies[0])\n    }\n    fetchMovie();\n    }, [id])\n    \n\n\n    return <React.Fragment>\n            <Row className='justify-content-md-center'>\n                <Col md='auto'>\n                {loadingStatus === 'loading' ? <Loader /> : movies.length > 0 ? movies.map((value, index) => \n                <Cards key={index} data={value} />) : <p className='noArticle'>There are no movies matching your request</p>\n                }\n                </Col>\n            </Row>\n    </React.Fragment>\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}