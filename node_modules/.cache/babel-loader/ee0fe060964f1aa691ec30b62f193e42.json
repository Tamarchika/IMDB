{"ast":null,"code":"var _jsxFileName = \"/Users/tamara/Desktop/NEWS_APP/src/components/cards.jsx\";\nimport React from \"react\";\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Placeholder from '../style/unnamed.png';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cards = _ref => {\n  let {\n    data\n  } = _ref;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"news-cards\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: [\"Source: \", data.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: typeof data.poster === 'string' ? data.poster : Placeholder,\n              alt: data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: data.plot\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                as: Link,\n                to: data.trailer.link,\n                children: [\"The movie trailer:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 83\n                }, this), \"Year: \", data.year, \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 40\n                }, this), \" Movie length: \", data.length, \". \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 20,\n                  columnNumber: 76\n                }, this), \" Movie rating: \", data.rating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Cards;\nCards.propTypes = {\n  data: PropTypes.object\n};\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/Users/tamara/Desktop/NEWS_APP/src/components/cards.jsx"],"names":["React","Card","Button","Container","Row","Col","PropTypes","Placeholder","Link","Cards","data","console","log","title","poster","fontWeight","plot","trailer","link","year","length","rating","propTypes","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,GAAlC,EAAuCC,GAAvC,QAAkD,iBAAlD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,MAAMC,KAAK,GAAG,QAAc;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,SAAD;AAAA,6BACI,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,iCACA,QAAC,IAAD;AAAA,oCACA,QAAC,IAAD,CAAM,MAAN;AAAA,qCAAsBA,IAAI,CAACG,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,IAAD,CAAM,GAAN;AAAU,cAAA,OAAO,EAAC,KAAlB;AAAwB,cAAA,GAAG,EAAE,OAAOH,IAAI,CAACI,MAAZ,KAAuB,QAAvB,GAAkCJ,IAAI,CAACI,MAAvC,GAAgDP,WAA7E;AAA0F,cAAA,GAAG,EAAEG,IAAI,CAACG;AAApG;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA,QAAC,IAAD,CAAM,IAAN;AAAA,sCACA,QAAC,IAAD,CAAM,KAAN;AAAY,gBAAA,KAAK,EAAE;AAACE,kBAAAA,UAAU,EAAC;AAAZ,iBAAnB;AAAA,0BAAyCL,IAAI,CAACM;AAA9C;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,EAAE,EAAER,IAAf;AAAqB,gBAAA,EAAE,EAAEE,IAAI,CAACO,OAAL,CAAaC,IAAtC;AAAA,8DAA8D;AAAA;AAAA;AAAA;AAAA,wBAA9D,YACOR,IAAI,CAACS,IADZ,qBACmB;AAAA;AAAA;AAAA;AAAA,wBADnB,qBACyCT,IAAI,CAACU,MAD9C,qBACuD;AAAA;AAAA;AAAA;AAAA,wBADvD,qBAC6EV,IAAI,CAACW,MADlF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CArBD;;KAAMZ,K;AAuBNA,KAAK,CAACa,SAAN,GAAkB;AACdZ,EAAAA,IAAI,EAAEJ,SAAS,CAACiB;AADF,CAAlB;AAIA,eAAed,KAAf","sourcesContent":["import React from \"react\";\nimport { Card, Button, Container, Row, Col } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport Placeholder from '../style/unnamed.png';\nimport { Link } from \"react-router-dom\";\n\nconst Cards = ({ data }) => {\n    console.log(data)\n    return (\n        <div className='news-cards'>\n            <Container>\n                <Row>\n                    <Col>\n                    <Card>\n                    <Card.Header>Source: {data.title}</Card.Header>\n                    <Card.Img variant=\"top\" src={typeof data.poster === 'string' ? data.poster : Placeholder} alt={data.title}/>\n                    <Card.Body>\n                    <Card.Title style={{fontWeight:\"bold\"}}>{data.plot}</Card.Title>\n                    <Card.Text as={Link} to={data.trailer.link}>The movie trailer:<br />\n                    Year: {data.year}. <br /> Movie length: {data.length}. <br /> Movie rating: {data.rating}</Card.Text>\n                    </Card.Body>\n                    </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nCards.propTypes = {\n    data: PropTypes.object\n}\n\nexport default Cards;"]},"metadata":{},"sourceType":"module"}